import * as Cesium from 'cesium';
export default class TorusGeometry {
    constructor(torusGeometryOptions) {
        // public bitangent: Cesium.GeometryAttribute | undefined
        // public tangent: Cesium.GeometryAttribute | undefined
        // public color: Cesium.GeometryAttribute | undefined
        this.primitiveType = Cesium.PrimitiveType.TRIANGLES;
        this.indices = new Uint16Array();
        // super()
        this.createGeometry(torusGeometryOptions);
    }
    createGeometry({ radius, tube, radialSegments, tubularSegments, arc, center }) {
        radialSegments = Math.floor(radialSegments);
        tubularSegments = Math.floor(tubularSegments);
        if (!arc)
            arc = 2 * Math.PI;
        const modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center);
        const positions = [];
        const indices = [];
        const normals = [];
        const st = [];
        const bitangents = [];
        const tangents = [];
        const colors = [];
        for (let j = 0; j <= radialSegments; j++) {
            for (let i = 0; i <= tubularSegments; i++) {
                const u = (i / tubularSegments) * arc;
                const v = (j / radialSegments) * Math.PI * 2;
                const x = (radius + tube * Math.cos(v)) * Math.cos(u);
                const y = (radius + tube * Math.cos(v)) * Math.sin(u);
                const z = tube * Math.sin(v);
                const pos = new Cesium.Cartesian3(x, y, z);
                positions.push(Cesium.Matrix4.multiplyByPoint(modelMatrix, pos, new Cesium.Cartesian3()));
                const cIn = Cesium.Cartesian3.ZERO.clone();
                cIn.x = radius * Math.cos(u);
                cIn.y = radius * Math.sin(u);
                const normal = Cesium.Cartesian3.subtract(pos, cIn, new Cesium.Cartesian3());
                Cesium.Cartesian3.normalize(Cesium.Matrix4.multiplyByPoint(modelMatrix, normal, new Cesium.Cartesian3()), normal);
                normals.push(normal);
                st.push(new Cesium.Cartesian2(i / radialSegments, j / tubularSegments));
                const tangent = Cesium.Cartesian3.cross(normal, Cesium.Cartesian3.UNIT_Z, new Cesium.Cartesian3());
                Cesium.Cartesian3.normalize(tangent, tangent);
                tangents.push(tangent);
                const bitangent = Cesium.Cartesian3.cross(tangent, normal, new Cesium.Cartesian3());
                Cesium.Cartesian3.normalize(bitangent, bitangent);
                bitangents.push(bitangent);
                const color = Cesium.Color.BLUE.clone();
                colors.push(color.red, color.green, color.blue, color.alpha);
            }
        }
        for (let j = 1; j <= radialSegments; j++) {
            for (let i = 1; i <= tubularSegments; i++) {
                // indices
                const a = (tubularSegments + 1) * j + i - 1;
                const b = (tubularSegments + 1) * (j - 1) + i - 1;
                const c = (tubularSegments + 1) * (j - 1) + i;
                const d = (tubularSegments + 1) * j + i;
                // faces
                indices.push(a, b, d);
                indices.push(b, c, d);
            }
        }
        const posFloatArray = new Float64Array(Cesium.Cartesian3.packArray(positions));
        const positionsAttr = new Cesium.GeometryAttribute({
            componentDatatype: Cesium.ComponentDatatype.DOUBLE,
            componentsPerAttribute: 3,
            values: posFloatArray
        });
        const normalsAttr = new Cesium.GeometryAttribute({
            componentDatatype: Cesium.ComponentDatatype.FLOAT,
            componentsPerAttribute: 3,
            values: new Float32Array(Cesium.Cartesian3.packArray(normals))
        });
        this.attributes = {
            position: positionsAttr,
            normal: normalsAttr
        };
        this.indices = new Uint16Array(indices);
        this.geometry = new Cesium.Geometry({
            attributes: this.attributes,
            indices: this.indices,
            primitiveType: Cesium.PrimitiveType.POINTS,
            boundingSphere: Cesium.BoundingSphere.fromVertices(Cesium.Cartesian3.packArray(positions))
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9ydXNHZW9tZXRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90b3J1c0dlb21ldHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxNQUFNLE1BQU0sUUFBUSxDQUFBO0FBRWhDLE1BQU0sQ0FBQyxPQUFPLE9BQU8sYUFBYTtJQVdoQyxZQUFZLG9CQUEwQztRQUx0RCx5REFBeUQ7UUFDekQsdURBQXVEO1FBQ3ZELHFEQUFxRDtRQUM5QyxrQkFBYSxHQUF5QixNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQTtRQUNwRSxZQUFPLEdBQWdCLElBQUksV0FBVyxFQUFFLENBQUE7UUFFN0MsVUFBVTtRQUNWLElBQUksQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQTtJQUMzQyxDQUFDO0lBRU8sY0FBYyxDQUFDLEVBQ3JCLE1BQU0sRUFDTixJQUFJLEVBQ0osY0FBYyxFQUNkLGVBQWUsRUFDZixHQUFHLEVBQ0gsTUFBTSxFQUNlO1FBQ3JCLGNBQWMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFBO1FBQzNDLGVBQWUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBRTdDLElBQUksQ0FBQyxHQUFHO1lBQUUsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFBO1FBRTNCLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsdUJBQXVCLENBQUMsTUFBTSxDQUFDLENBQUE7UUFFckUsTUFBTSxTQUFTLEdBQXdCLEVBQUUsQ0FBQTtRQUN6QyxNQUFNLE9BQU8sR0FBYSxFQUFFLENBQUE7UUFDNUIsTUFBTSxPQUFPLEdBQXdCLEVBQUUsQ0FBQTtRQUN2QyxNQUFNLEVBQUUsR0FBd0IsRUFBRSxDQUFBO1FBQ2xDLE1BQU0sVUFBVSxHQUF3QixFQUFFLENBQUE7UUFDMUMsTUFBTSxRQUFRLEdBQXdCLEVBQUUsQ0FBQTtRQUN4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